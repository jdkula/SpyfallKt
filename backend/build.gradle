apply plugin: 'kotlin-platform-jvm'
apply plugin: 'application'
apply plugin: 'kotlinx-serialization'
apply plugin: 'org.junit.platform.gradle.plugin'


repositories {
    jcenter()
    maven { url "http://dl.bintray.com/kotlin/ktor" }
    maven { url "https://dl.bintray.com/kotlin/exposed" }
    maven { url "https://jitpack.io" }
    maven { url "https://dl.bintray.com/jetbrains/spek" }
}
dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile "io.ktor:ktor-server-core:$ktor_version"
    compile "io.ktor:ktor-server-netty:$ktor_version"
    compile "io.ktor:ktor-websockets:$ktor_version"
    compile "org.jetbrains.exposed:exposed:0.10.1"
    compile "ch.qos.logback:logback-classic:1.2.1"
    compile "org.xerial:sqlite-jdbc:3.21.0.1"
    compile "org.jetbrains.kotlinx:kotlinx-serialization-runtime:$serialization_version"
    compile 'com.github.kizitonwose.time:time:1.0.1'

    expectedBy project(':common')

    testCompile "org.mockito:mockito-core:2.+"
    testCompile "com.nhaarman:mockito-kotlin:1.5.0"
    testCompile 'org.jetbrains.spek:spek-api:1.1.5'
    testRuntime 'org.jetbrains.spek:spek-junit-platform-engine:1.1.5'
}

kotlin {
    experimental {
        coroutines 'enable'
    }
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

junitPlatform {
    filters {
        engines {
            include 'spek'
        }
    }
}


applicationDefaultJvmArgs = ["-server", "-XX:+TieredCompilation"]
mainClassName = "io.ktor.server.netty.DevelopmentEngine"